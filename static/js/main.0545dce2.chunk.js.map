{"version":3,"sources":["components/Header.js","components/About.js","components/Resume.js","components/Portfolio.js","components/Footer.js","resumeData.js","App.js","serviceWorker.js","index.js"],"names":["Header","resumeData","this","props","react_default","a","createElement","Fragment","id","className","href","title","name","style","color","fontFamily","role","roleDescription","socialLinks","map","item","key","url","target","Component","About","src","alt","aboutme","address","website","Resume","education","UniversityName","specialization","MonthOfPassing","YearOfPassing","Achievements","work","CompanyName","MonthOfLeaving","YearOfLeaving","rel","text","skillsDescription","skills","concat","skillname","toLowerCase","Porfolio","portfolio","imgurl","description","Footer","imagebaseurl","testimonials","App","Header_Header","About_About","Resume_Resume","Portfolio_Porfolio","Footer_Footer","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0545dce2.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nexport default class Header extends Component {\n  render() {\n    let resumeData = this.props.resumeData;\n    return (\n      <React.Fragment>\n        <header id=\"home\">\n          <nav id=\"nav-wrap\">\n            <a className=\"mobile-btn\" href=\"#nav-wrap\" title=\"Show navigation\">\n              Show navigation\n            </a>\n            <a className=\"mobile-btn\" href=\"#\" title=\"Hide navigation\">\n              Hide navigation\n            </a>\n            <ul id=\"nav\" className=\"nav\">\n              <li className=\"current\">\n                <a className=\"smoothscroll\" href=\"#home\">\n                  Home\n                </a>\n              </li>\n              <li>\n                <a className=\"smoothscroll\" href=\"#about\">\n                  About\n                </a>\n              </li>\n              <li>\n                <a className=\"smoothscroll\" href=\"#resume\">\n                  Resume\n                </a>\n              </li>\n              <li>\n                <a className=\"smoothscroll\" href=\"#portfolio\">\n                  Works\n                </a>\n              </li>\n            </ul>\n          </nav>\n\n          <div className=\"row banner\">\n            <div className=\"banner-text\">\n              <h1 className=\"responsive-headline\">{resumeData.name}.</h1>\n              <h3 style={{ color: \"#fff\", fontFamily: \"sans-serif \" }}>\n                {resumeData.role}.{resumeData.roleDescription}\n              </h3>\n              <hr />\n              <ul className=\"social\">\n                {resumeData.socialLinks &&\n                  resumeData.socialLinks.map((item) => {\n                    return (\n                      <li key={item.name}>\n                        <a href={item.url} target=\"_blank\">\n                          <i className={item.className} />\n                        </a>\n                      </li>\n                    );\n                  })}\n              </ul>\n            </div>\n          </div>\n\n          <p className=\"scrolldown\">\n            <a className=\"smoothscroll\" href=\"#about\">\n              <i className=\"icon-down-circle\" />\n            </a>\n          </p>\n        </header>\n      </React.Fragment>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nexport default class About extends Component {\n  render() {\n    let resumeData = this.props.resumeData;\n    return (\n      <section id=\"about\">\n        <div className=\"row\">\n          <div className=\"three columns\">\n            <img className=\"profile-pic\" src=\"images/profilepic.png\" alt=\"\" />\n          </div>\n          <div className=\"nine columns main-col\">\n            <h2>About Me</h2>\n            <p>{resumeData.aboutme}</p>\n\n            <div className=\"row\">\n              <div className=\"columns contact-details\">\n                <h2>Contact Details</h2>\n                <p className=\"address\">\n                  <span>{resumeData.name}</span>\n                  <br />\n                  <span>{resumeData.address}</span>\n                  <br />\n                  <span>{resumeData.website}</span>\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nexport default class Resume extends Component {\n  render() {\n    let resumeData = this.props.resumeData;\n    return (\n      <section id=\"resume\">\n        <div className=\"row education\">\n          <div className=\"three columns header-col\">\n            <h1>\n              <span>Education</span>\n            </h1>\n          </div>\n\n          <div className=\"nine columns main-col\">\n            {resumeData.education &&\n              resumeData.education.map((item) => {\n                return (\n                  <div className=\"row item\">\n                    <div className=\"twelve columns\">\n                      <h3>{item.UniversityName}</h3>\n                      <p className=\"info\">\n                        {item.specialization}\n                        <span>&bull;</span>{\" \"}\n                        <em className=\"date\">\n                          {item.MonthOfPassing} {item.YearOfPassing}\n                        </em>\n                      </p>\n                      <p>{item.Achievements}</p>\n                    </div>\n                  </div>\n                );\n              })}\n          </div>\n        </div>\n        <div className=\"row work\">\n          <div className=\"three columns header-col\">\n            <h1>\n              <span>Work</span>\n            </h1>\n          </div>\n\n          <div className=\"nine columns main-col\">\n            {resumeData.work &&\n              resumeData.work.map((item) => {\n                return (\n                  <div className=\"row item\">\n                    <div className=\"twelve columns\">\n                      <h3>{item.CompanyName}</h3>\n                      <p className=\"info\">\n                        {item.specialization}\n                        <span>&bull;</span>{\" \"}\n                        <em className=\"date\">\n                          {item.MonthOfLeaving} {item.YearOfLeaving}\n                        </em>\n                      </p>\n                      <p>\n                        <a\n                          href={item.Achievements.url}\n                          target=\"_blank\"\n                          rel=\"noopener noreferrer\"\n                        >\n                          {item.Achievements.text}\n                        </a>\n                      </p>\n                    </div>\n                  </div>\n                );\n              })}\n          </div>\n        </div>\n\n        <div className=\"row skill\">\n          <div className=\"three columns header-col\">\n            <h1>\n              <span>Skills</span>\n            </h1>\n          </div>\n\n          <div className=\"nine columns main-col\">\n            <p>{resumeData.skillsDescription}</p>\n\n            <div className=\"bars\">\n              <ul className=\"skills\">\n                {resumeData.skills &&\n                  resumeData.skills.map((item) => {\n                    return (\n                      <li>\n                        <span\n                          className={`bar-expand ${item.skillname.toLowerCase()}`}\n                        />\n                        <em>{item.skillname}</em>\n                      </li>\n                    );\n                  })}\n              </ul>\n            </div>\n          </div>\n        </div>\n      </section>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nexport default class Porfolio extends Component {\n  render() {\n    let resumeData = this.props.resumeData;\n    return (\n      <section id=\"portfolio\">\n        <div className=\"row\">\n          <div className=\"twelve columns collapsed\">\n            <h1>Check Out Some of My Projects.</h1>\n            <div\n              id=\"portfolio-wrapper\"\n              className=\"bgrid-quarters s-bgrid-thirds cf\"\n            >\n              {resumeData.portfolio &&\n                resumeData.portfolio.map((item) => {\n                  return (\n                    <div className=\"columns portfolio-item\">\n                      <div className=\"item-wrap\">\n                        <a\n                          href={item.url}\n                          target=\"_blank\"\n                          rel=\"noopener noreferrer\"\n                        >\n                          <img src={`${item.imgurl}`} className=\"item-img\" />\n                          <div className=\"overlay\">\n                            <div className=\"portfolio-item-meta\">\n                              <h5>{item.name}</h5>\n                              <p>{item.description}</p>\n                            </div>\n                          </div>\n                        </a>\n                      </div>\n                    </div>\n                  );\n                })}\n            </div>\n          </div>\n        </div>\n      </section>\n    );\n  }\n}\n","import React, { Component } from 'react';\nexport default class Footer extends Component {\n  render() {\n    let resumeData = this.props.resumeData;\n    return (\n      <footer>\n      <div className=\"row\">\n        <div className=\"twelve columns\">\n          <ul className=\"social-links\">\n            {\n              resumeData.socialLinks && resumeData.socialLinks.map((item)=>{\n                return(\n                  <li>\n                    <a href={item.url}>\n                    <i className={item.className} />\n                    </a>\n                  </li>\n                )\n              })\n            }\n          </ul>\n          \n        </div>\n        <div id=\"go-top\"><a className=\"smoothscroll\" title=\"Back to Top\" href=\"#home\"><i className=\"icon-up-open\" /></a></div>\n      </div>\n    </footer>\n    );\n  }\n}","let resumeData = {\n  imagebaseurl: \"AlexisFimeyer.github.io/\",\n  name: \"Alexis Fimeyer\",\n  role: \"Student at TUDelft in computer science and engineering\",\n  roleDescription: \"\",\n  socialLinks: [\n    {\n      name: \"github\",\n      url: \"https://github.com/AlexisFimeyer\",\n      className: \"fa fa-github\",\n    },\n  ],\n  aboutme:\n    \"I am currently a second year student at TUDelft and pursuing my bachelor in computer science and engineering. Currently diving deeper into Machine Learning and Big Data Processing with the data variant.\",\n  address: \"Netherlands\",\n  website: \"https://AlexisFimeyer.github.io\",\n  education: [\n    {\n      UniversityName: \"Delft University of Technology\",\n      specialization: \"Data\",\n      MonthOfPassing: \"July\",\n      YearOfPassing: \"2023\",\n      Achievements: \"First year completed\",\n    },\n    {\n      UniversityName: \"École Européenne de Bruxelles II\",\n      specialization: \"Mathematics, physics and chemistry\",\n      MonthOfPassing: \"July\",\n      YearOfPassing: \"2022\",\n      Achievements: \"European baccalaureate\",\n    },\n  ],\n  work: [\n    {\n      CompanyName: \"Stanford University\",\n      specialization: \"Machine Learning\",\n      MonthOfLeaving: \"2021\",\n      YearOfLeaving: \"\",\n      Achievements: {\n        text: \"Certificate of completion (97.46%)\",\n        url: \"https://coursera.org/share/66a2da2d7403df4926b08dc76b26d0a2\",\n      },\n    },\n    {\n      CompanyName: \"Michigan University\",\n      specialization: \"Applied Machine Learning in Python\",\n      MonthOfLeaving: \"2021\",\n      YearOfLeaving: \"\",\n      Achievements: {\n        text: \"Certificate of completion (92.04%)\",\n        url: \"https://coursera.org/share/8638ab3bf0cef84337ff2fdfc8cda3e9\",\n      },\n    },\n  ],\n  skillsDescription: \"\",\n  skills: [\n    {\n      skillname: \"java\",\n    },\n    {\n      skillname: \"python\",\n    },\n    {\n      skillname: \"javascript\",\n    },\n    {\n      skillname: \"Reactjs\",\n    },\n    {\n      skillname: \"Octave\",\n    },\n  ],\n  portfolio: [\n    {\n      name: \"Assembly BitMap encoder\",\n      description: \"Script\",\n      imgurl: \"/images/project-2.png\",\n      url:\n        \"https://github.com/AlexisFimeyer/Assembly-projects/tree/main/BitMap%20Encoder\",\n    },\n    {\n      name: \"SHA-1 implemented in Assembly\",\n      description: \"Script\",\n      imgurl: \"/images/project-1.png\",\n      url: \"https://github.com/AlexisFimeyer/Assembly-projects/tree/main/SHA1\",\n    },\n    {\n      name: \"Talio - A java based board sharing app\",\n      description: \"App\",\n      imgurl: \"images/project-3.png\",\n      url: \"https://github.com/AlexisFimeyer/Talio\",\n    },\n    {\n      name: \"A BrainFuck interpreter written in Assembly\",\n      description: \"Script\",\n      imgurl: \"images/project-4.png\",\n      url:\n        \"https://github.com/AlexisFimeyer/Assembly-projects/tree/main/BrainFuck\",\n    },\n  ],\n  testimonials: [\n    {\n      description: \"This is a sample testimonial\",\n      name: \"Some technical guy\",\n    },\n    {\n      description: \"This is a sample testimonial\",\n      name: \"Some technical guy\",\n    },\n  ],\n};\n\nexport default resumeData;\n","import React, { Component } from \"react\";\nimport Header from \"./components/Header\";\nimport About from \"./components/About\";\nimport Resume from \"./components/Resume\";\nimport Portfolio from \"./components/Portfolio\";\nimport Footer from \"./components/Footer\";\nimport resumeData from \"./resumeData\";\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Header resumeData={resumeData} />\n        <About resumeData={resumeData} />\n        <Resume resumeData={resumeData} />\n        <Portfolio resumeData={resumeData} />\n        <Footer resumeData={resumeData} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}